version: '3.7'
services:
  web:
    container_name: web
    domainname: app
    build:
      context: app
      target: ${WEB_ENV}
      args:
        PROJECT_PATH: ${PROJECT_PATH}
        DLL_NAME: ${DLL_NAME}
    image: ${WEB_IMAGE_NAME}
    env_file:
      - ./app/env/web.env
      - ./app/env/web.dev.env
    volumes:
      - ./app/CleanSolution.sln:/app/CleanSolution.sln
      - ./app/Makefile:/app/Makefile
      - ./app/scripts:/app/scripts
      - ./app/settings:/app/settings
      - ./app/sonar-report:/app/sonar-report
      - ./app/src:/app/src
      - ./app/test:/app/test
      - ./app/test-report:/app/test-report
    ports:
      - 8000:80
    healthcheck:
      test: curl --fail http://localhost/healthcheck || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    depends_on:
      - wiremock
      - mongodb
  wiremock:
    domainname: app
    container_name: wiremock
    build:
      context: wiremock
    ports:
      - 8080:8080
      - 8443:8443
    volumes:
      - ./wiremock/mappings:/home/wiremock/mappings
      - ./wiremock/files:/home/wiremock/__files
  mongodb:
    domainname: app
    container_name: mongodb
    build:
      context: mongo
    ports:
      - "27017-27019:27017-27019"
    environment:
      - MONGO_INITDB_DATABASE=product-service
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 20s