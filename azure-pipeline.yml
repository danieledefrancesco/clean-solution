variables:
  - group: clean-solution
  - name: 'vmImageName'
    value: 'ubuntu-20.04'
  - name: 'workingDirectory'  
    value: '$(System.DefaultWorkingDirectory)'
  - name: 'reportsFolder'
  - value: '$(Build.ArtifactStagingDirectory)/reports'
  - name: 'reportsArchiveFile'
  - value: '$(Build.ArtifactStagingDirectory)/reports.zip'
  - name: 'reportsArtifactName'
  - value: 'reports-$(Build.BuildNumber)'
  
  
stages:
  - stage: build_and_tag
    displayName: Build and Tag SDK and WEB images

    jobs:
 
      - job: build_sdk
        displayName: Build and Tag SDK image
        pool:
          vmImage: $(vmImageName)

        steps:
          - task: DockerInstaller@0
            displayName: Install docker
            inputs:
              dockerVersion: '17.09.0-ce'

          - task: Bash@3
            displayName: Build and Tag SDK Image
            inputs:
              targetType: 'inline'
              script: |
                make build_and_tag_sdk version=$(Build.BuildNumber) docker_username=$(docker_username)

          - task: Bash@3
            displayName: Run Unit Tests and Sonar Scan
            inputs:
              targetType: 'inline'
              script: |
                make run_sonar_scan

          - task: Bash@3
            displayName: Build and Tag Web Image
            inputs:
              targetType: 'inline'
              script: |
                make build_and_tag_web version=$(Build.BuildNumber) docker_username=$(docker_username)

          - task: Bash@3
            displayName: Run Behavioral Tests
            inputs:
              targetType: 'inline'
              script: |
                make behavioral_test

          - task: Bash@3
            displayName: Prepare Artifact Folder
            condition: always()
            inputs:
              targetType: 'inline'
              script: |
                mkdir $(reportsFolder)
                ls
                if [ -d "test-report" ]
                then
                  cp -r test-report $(reportsFolder)
                fi
                if [ -d "sonar-report" ]
                then
                  cp -r sonar-report $(reportsFolder)
                fi
                if [ -d  "test/behavioral/target/surfire-reports" ]
                then
                  cp -r test/behavioral/target/surfire-reports $(reportsFolder)/behavioral-test-report
                fi
                ls  $(reportsFolder)

          - task: ArchiveFiles@2
            displayName: Archive Reports
            condition: always()
            inputs:
              rootFolderOrFile: '$(reportsFolder)'
              inlcludeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(reportsArchiveFile)'
              replaceExistingArchive: true

          - task: PublishPipelineArtifact@1
            displayName: Publish Reports
            condition: always()
            inputs:
              targetPath: '$(reportsArchiveFile)'
              artifact: 'ci-reports'
              publishLocation: 'pipeline'

          - task: Bash@3
            displayName: Clear Artifact Staging Directory
            condition: always()
            inputs:
              targetType: 'inline'
              script: |
                rm -rf $(Build.ArtifactStagingDirectory)/*
